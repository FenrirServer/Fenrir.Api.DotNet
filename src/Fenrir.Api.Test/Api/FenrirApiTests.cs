/*
 * Fenrir Api
 * 
 * This file was automatically generated using openapi generator. 
 * DO NOT EDIT MANUALLY.
 * Refer to: https://github.com/FenrirServer/Cloud.SdkTemplates
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Fenrir.Api.Client;
using Fenrir.Api.Api;
// uncomment below to import models
//using Fenrir.Api.Model;

namespace Fenrir.Api.Test.Api
{
    /// <summary>
    ///  Class for testing FenrirApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class FenrirApiTests : IDisposable
    {
        private FenrirApi instance;

        public FenrirApiTests()
        {
            instance = new FenrirApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of FenrirApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' FenrirApi
            //Assert.IsType<FenrirApi>(instance);
        }

        /// <summary>
        /// Test CreateApiToken
        /// </summary>
        [Fact]
        public void CreateApiTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //ApiToken apiToken = null;
            //var response = instance.CreateApiToken(apiToken);
            //Assert.IsType<ApiTokenResponse>(response);
        }

        /// <summary>
        /// Test CreateApplication
        /// </summary>
        [Fact]
        public void CreateApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Application application = null;
            //var response = instance.CreateApplication(application);
            //Assert.IsType<ApplicationResponse>(response);
        }

        /// <summary>
        /// Test CreateApplicationConfiguration
        /// </summary>
        [Fact]
        public void CreateApplicationConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //ApplicationConfiguration applicationConfiguration = null;
            //var response = instance.CreateApplicationConfiguration(applicationUuid, applicationConfiguration);
            //Assert.IsType<ApplicationConfigurationResponse>(response);
        }

        /// <summary>
        /// Test CreateDeployment
        /// </summary>
        [Fact]
        public void CreateDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //Deployment deployment = null;
            //var response = instance.CreateDeployment(applicationUuid, deployment);
            //Assert.IsType<DeploymentResponse>(response);
        }

        /// <summary>
        /// Test CreateMatchmakingQueue
        /// </summary>
        [Fact]
        public void CreateMatchmakingQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //MatchmakingQueue matchmakingQueue = null;
            //var response = instance.CreateMatchmakingQueue(applicationUuid, matchmakingQueue);
            //Assert.IsType<MatchmakingQueueResponse>(response);
        }

        /// <summary>
        /// Test CreateMatchmakingQueueConfiguration
        /// </summary>
        [Fact]
        public void CreateMatchmakingQueueConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //MatchmakingQueueConfiguration matchmakingQueueConfiguration = null;
            //var response = instance.CreateMatchmakingQueueConfiguration(applicationUuid, queueUuid, matchmakingQueueConfiguration);
            //Assert.IsType<MatchmakingQueueConfigurationResponse>(response);
        }

        /// <summary>
        /// Test DeleteApiToken
        /// </summary>
        [Fact]
        public void DeleteApiTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tokenUuid = null;
            //var response = instance.DeleteApiToken(tokenUuid);
            //Assert.IsType<Response>(response);
        }

        /// <summary>
        /// Test DeleteApplication
        /// </summary>
        [Fact]
        public void DeleteApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.DeleteApplication(applicationUuid);
            //Assert.IsType<Response>(response);
        }

        /// <summary>
        /// Test DeleteDeployment
        /// </summary>
        [Fact]
        public void DeleteDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //var response = instance.DeleteDeployment(applicationUuid, deploymentUuid);
            //Assert.IsType<Response>(response);
        }

        /// <summary>
        /// Test DeleteMatchmakingQueue
        /// </summary>
        [Fact]
        public void DeleteMatchmakingQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //var response = instance.DeleteMatchmakingQueue(applicationUuid, queueUuid);
            //Assert.IsType<Response>(response);
        }

        /// <summary>
        /// Test GetApiToken
        /// </summary>
        [Fact]
        public void GetApiTokenTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string tokenUuid = null;
            //var response = instance.GetApiToken(tokenUuid);
            //Assert.IsType<ApiTokenListResponse>(response);
        }

        /// <summary>
        /// Test GetApiTokens
        /// </summary>
        [Fact]
        public void GetApiTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetApiTokens();
            //Assert.IsType<ApiTokenListResponse>(response);
        }

        /// <summary>
        /// Test GetApplication
        /// </summary>
        [Fact]
        public void GetApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.GetApplication(applicationUuid);
            //Assert.IsType<ApplicationResponse>(response);
        }

        /// <summary>
        /// Test GetApplicationConfiguration
        /// </summary>
        [Fact]
        public void GetApplicationConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string configurationUuid = null;
            //var response = instance.GetApplicationConfiguration(applicationUuid, configurationUuid);
            //Assert.IsType<ApplicationConfigurationResponse>(response);
        }

        /// <summary>
        /// Test GetApplicationConfigurations
        /// </summary>
        [Fact]
        public void GetApplicationConfigurationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.GetApplicationConfigurations(applicationUuid);
            //Assert.IsType<ApplicationConfigurationListResponse>(response);
        }

        /// <summary>
        /// Test GetApplicationStats
        /// </summary>
        [Fact]
        public void GetApplicationStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //List<string> filter = null;
            //var response = instance.GetApplicationStats(applicationUuid, filter);
            //Assert.IsType<ApplicationStatsResponse>(response);
        }

        /// <summary>
        /// Test GetApplications
        /// </summary>
        [Fact]
        public void GetApplicationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetApplications();
            //Assert.IsType<ApplicationListResponse>(response);
        }

        /// <summary>
        /// Test GetCurrentApplicationConfiguration
        /// </summary>
        [Fact]
        public void GetCurrentApplicationConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.GetCurrentApplicationConfiguration(applicationUuid);
            //Assert.IsType<ApplicationConfigurationResponse>(response);
        }

        /// <summary>
        /// Test GetCurrentMatchmakingQueueConfiguration
        /// </summary>
        [Fact]
        public void GetCurrentMatchmakingQueueConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //var response = instance.GetCurrentMatchmakingQueueConfiguration(applicationUuid, queueUuid);
            //Assert.IsType<MatchmakingQueueConfigurationResponse>(response);
        }

        /// <summary>
        /// Test GetDeployment
        /// </summary>
        [Fact]
        public void GetDeploymentTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //var response = instance.GetDeployment(applicationUuid, deploymentUuid);
            //Assert.IsType<DeploymentResponse>(response);
        }

        /// <summary>
        /// Test GetDeploymentStats
        /// </summary>
        [Fact]
        public void GetDeploymentStatsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //List<string> filter = null;
            //var response = instance.GetDeploymentStats(applicationUuid, deploymentUuid, filter);
            //Assert.IsType<DeploymentStatsResponse>(response);
        }

        /// <summary>
        /// Test GetDeployments
        /// </summary>
        [Fact]
        public void GetDeploymentsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.GetDeployments(applicationUuid);
            //Assert.IsType<DeploymentListResponse>(response);
        }

        /// <summary>
        /// Test GetImages
        /// </summary>
        [Fact]
        public void GetImagesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.GetImages(applicationUuid);
            //Assert.IsType<ImageListResponse>(response);
        }

        /// <summary>
        /// Test GetInstance
        /// </summary>
        [Fact]
        public void GetInstanceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //string instanceUuid = null;
            //var response = instance.GetInstance(applicationUuid, deploymentUuid, instanceUuid);
            //Assert.IsType<ApplicationInstanceResponse>(response);
        }

        /// <summary>
        /// Test GetInstanceLogs
        /// </summary>
        [Fact]
        public void GetInstanceLogsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //string instanceUuid = null;
            //var response = instance.GetInstanceLogs(applicationUuid, deploymentUuid, instanceUuid);
            //Assert.IsType<InstanceLogs>(response);
        }

        /// <summary>
        /// Test GetInstanceLogsPreview
        /// </summary>
        [Fact]
        public void GetInstanceLogsPreviewTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //string instanceUuid = null;
            //var response = instance.GetInstanceLogsPreview(applicationUuid, deploymentUuid, instanceUuid);
            //Assert.IsType<InstanceLogsPreview>(response);
        }

        /// <summary>
        /// Test GetInstances
        /// </summary>
        [Fact]
        public void GetInstancesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string deploymentUuid = null;
            //var response = instance.GetInstances(applicationUuid, deploymentUuid);
            //Assert.IsType<ApplicationInstanceListResponse>(response);
        }

        /// <summary>
        /// Test GetMatchmakingQueue
        /// </summary>
        [Fact]
        public void GetMatchmakingQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //var response = instance.GetMatchmakingQueue(applicationUuid, queueUuid);
            //Assert.IsType<MatchmakingQueueResponse>(response);
        }

        /// <summary>
        /// Test GetMatchmakingQueueConfiguration
        /// </summary>
        [Fact]
        public void GetMatchmakingQueueConfigurationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //string configurationUuid = null;
            //var response = instance.GetMatchmakingQueueConfiguration(applicationUuid, queueUuid, configurationUuid);
            //Assert.IsType<MatchmakingQueueConfigurationResponse>(response);
        }

        /// <summary>
        /// Test GetMatchmakingQueueConfigurations
        /// </summary>
        [Fact]
        public void GetMatchmakingQueueConfigurationsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //var response = instance.GetMatchmakingQueueConfigurations(applicationUuid, queueUuid);
            //Assert.IsType<MatchmakingQueueConfigurationListResponse>(response);
        }

        /// <summary>
        /// Test GetMatchmakingQueues
        /// </summary>
        [Fact]
        public void GetMatchmakingQueuesTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //var response = instance.GetMatchmakingQueues(applicationUuid);
            //Assert.IsType<MatchmakingQueueListResponse>(response);
        }

        /// <summary>
        /// Test UpdateApplication
        /// </summary>
        [Fact]
        public void UpdateApplicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //Application application = null;
            //var response = instance.UpdateApplication(applicationUuid, application);
            //Assert.IsType<ApplicationResponse>(response);
        }

        /// <summary>
        /// Test UpdateMatchmakingQueue
        /// </summary>
        [Fact]
        public void UpdateMatchmakingQueueTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string applicationUuid = null;
            //string queueUuid = null;
            //MatchmakingQueue matchmakingQueue = null;
            //var response = instance.UpdateMatchmakingQueue(applicationUuid, queueUuid, matchmakingQueue);
            //Assert.IsType<MatchmakingQueueResponse>(response);
        }
    }
}
